/**
 * –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ—Å—Ä–æ—á–Ω–æ–≥–æ –ø–æ–≥–∞—à–µ–Ω–∏—è
 * 
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:
 * 1. –ß–∞—Å—Ç–∏—á–Ω–æ –ø–æ–≥–∞—Å–∏—Ç—å –∑–∞–π–º (–ª—é–±–∞—è —Å—É–º–º–∞ –¥–æ –æ—Å—Ç–∞—Ç–∫–∞ –¥–æ–ª–≥–∞)
 * 2. –ü–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–∫—Ä—ã—Ç—å –∑–∞–π–º (–∫–Ω–æ–ø–∫–∞ "–ü–æ–≥–∞—Å–∏—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é")
 * 
 * –ü–æ—Å–ª–µ –ø–æ–≥–∞—à–µ–Ω–∏—è:
 * - –û–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –æ—Å—Ç–∞—Ç–æ–∫ –¥–æ–ª–≥–∞
 * - –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –≥—Ä–∞—Ñ–∏–∫ –ø–ª–∞—Ç–µ–∂–µ–π
 * - –ú–æ–∂–µ—Ç —Å–æ–∫—Ä–∞—Ç–∏—Ç—å—Å—è —Å—Ä–æ–∫ –∏–ª–∏ —É–º–µ–Ω—å—à–∏—Ç—å—Å—è –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂
 * - Dashboard –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è
 */

'use client';

import React, { useState, useMemo } from 'react';
import { Button, Input, Modal } from '@/shared/ui';
import { validateRepaymentAmount } from '@/shared/lib/utils/validation';
import { formatBTC } from '@/shared/lib/utils/format';
import { makeRepayment } from '../api/repaymentApi';

interface RepaymentModalProps {
  isOpen: boolean;
  onClose: () => void;
  loanId: string;
  remainingBalance: number;      // –¢–µ–∫—É—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫ –¥–æ–ª–≥–∞
  onSuccess: () => void;          // Callback –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–≥–∞—à–µ–Ω–∏—è
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –¥–æ—Å—Ä–æ—á–Ω–æ–≥–æ –ø–æ–≥–∞—à–µ–Ω–∏—è –∑–∞–π–º–∞
 * 
 * –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
 * - –í–≤–æ–¥ —Å—É–º–º—ã –ø–æ–≥–∞—à–µ–Ω–∏—è —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
 * - –ë—ã—Å—Ç—Ä–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π —Å—É–º–º—ã
 * - –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è
 * - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞
 */
export const RepaymentModal: React.FC<RepaymentModalProps> = ({
  isOpen,
  onClose,
  loanId,
  remainingBalance,
  onSuccess,
}) => {
  const [amount, setAmount] = useState<string>('');
  const [error, setError] = useState('');
  const [loading, setLoading] = useState(false);

  // –ü–∞—Ä—Å–∏–º –≤–≤–µ–¥–µ–Ω–Ω—É—é —Å—É–º–º—É
  const amountNum = parseFloat(amount) || 0;
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ–≥–∞—à–µ–Ω–∏—è
  const repaymentType = amountNum >= remainingBalance ? 'full' : 'partial';
  const isFullRepayment = repaymentType === 'full';
  
  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–æ–≤—ã–π –æ—Å—Ç–∞—Ç–æ–∫ –ø–æ—Å–ª–µ –ø–æ–≥–∞—à–µ–Ω–∏—è
  const newBalance = useMemo(() => {
    if (!amountNum || amountNum <= 0) return remainingBalance;
    return Math.max(0, remainingBalance - amountNum);
  }, [amountNum, remainingBalance]);

  /**
   * –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª—è –ø–æ–ª–Ω–æ–π —Å—É–º–º–æ–π –¥–æ–ª–≥–∞
   * –£–¥–æ–±–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è –∑–∞–π–º–∞ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
   */
  const handleFullRepayment = () => {
    setAmount(remainingBalance.toFixed(8));
    setError(''); // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫–∏
  };

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –ø–æ–≥–∞—à–µ–Ω–∏—è
   * 
   * –ü—Ä–æ—Ü–µ—Å—Å:
   * 1. –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Å—É–º–º—ã
   * 2. –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
   * 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–π–º–∞
   * 4. –ü–µ—Ä–µ—Å—á–µ—Ç –≥—Ä–∞—Ñ–∏–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π
   * 5. –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
   */
  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError('');

    // –í–∞–ª–∏–¥–∞—Ü–∏—è: —Å—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å > 0 –∏ <= –æ—Å—Ç–∞—Ç–∫—É –¥–æ–ª–≥–∞
    const validation = validateRepaymentAmount(amountNum, remainingBalance);

    if (!validation.isValid) {
      setError(validation.error || '–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏');
      return;
    }

    setLoading(true);

    try {
      // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –¥–æ—Å—Ä–æ—á–Ω–æ–µ –ø–æ–≥–∞—à–µ–Ω–∏–µ
      const response = await makeRepayment({
        loanId,
        amount: amountNum,
        type: repaymentType,
      });

      if (response.success) {
        // –í—ã–∑—ã–≤–∞–µ–º callback –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–π–º–∞ –≤ Dashboard
        // –≠—Ç–æ –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –ø–µ—Ä–µ—Å—á–µ—Ç—É –≥—Ä–∞—Ñ–∏–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π
        onSuccess();
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É –∏ –æ—á–∏—â–∞–µ–º –ø–æ–ª–µ
        onClose();
        setAmount('');
      }
    } catch (err: any) {
      setError(err.message || '–û—à–∏–±–∫–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è');
    } finally {
      setLoading(false);
    }
  };

  return (
    <Modal
      isOpen={isOpen}
      onClose={onClose}
      title="–î–æ—Å—Ä–æ—á–Ω–æ–µ –ø–æ–≥–∞—à–µ–Ω–∏–µ"
      size="md"
    >
      <div className="space-y-4">
        {/* –¢–µ–∫—É—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫ –¥–æ–ª–≥–∞ */}
        <div className="bg-gradient-to-br from-gray-50 to-gray-100 p-5 rounded-lg border border-gray-200">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm text-gray-600 mb-1">–¢–µ–∫—É—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫ –¥–æ–ª–≥–∞:</p>
              <p className="text-3xl font-bold text-gray-900">
                {formatBTC(remainingBalance)}
              </p>
            </div>
            <div className="text-right">
              <p className="text-xs text-gray-500">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞</p>
              <p className="text-xs text-gray-500">–¥–ª—è –ø–æ–≥–∞—à–µ–Ω–∏—è</p>
            </div>
          </div>
        </div>

        <form onSubmit={handleSubmit} className="space-y-4">
          {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –ø–æ–≥–∞—à–µ–Ω–∏—è */}
          <Input
            label="–°—É–º–º–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è (BTC)"
            type="number"
            step="0.00000001"
            min="0.00000001"
            max={remainingBalance}
            value={amount}
            onChange={(e) => setAmount(e.target.value)}
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 0.1"
            error={error}
            helperText={`–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –æ—Ç 0.00000001 –¥–æ ${formatBTC(remainingBalance)}`}
            disabled={loading}
            required
          />

          {/* –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è */}
          {amountNum > 0 && !error && (
            <div className={`p-4 rounded-lg border-2 ${
              isFullRepayment 
                ? 'bg-green-50 border-green-200' 
                : 'bg-blue-50 border-blue-200'
            }`}>
              <div className="flex items-start gap-3">
                <div className="flex-shrink-0 mt-0.5">
                  {isFullRepayment ? (
                    <svg className="w-6 h-6 text-green-600" fill="none" strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" viewBox="0 0 24 24" stroke="currentColor">
                      <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                  ) : (
                    <svg className="w-6 h-6 text-blue-600" fill="none" strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" viewBox="0 0 24 24" stroke="currentColor">
                      <path d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                  )}
                </div>
                <div className="flex-1">
                  <p className={`font-semibold text-sm mb-2 ${
                    isFullRepayment ? 'text-green-900' : 'text-blue-900'
                  }`}>
                    {isFullRepayment ? '‚úì –ü–æ–ª–Ω–æ–µ –ø–æ–≥–∞—à–µ–Ω–∏–µ' : '‚Üí –ß–∞—Å—Ç–∏—á–Ω–æ–µ –ø–æ–≥–∞—à–µ–Ω–∏–µ'}
                  </p>
                  <div className="space-y-1 text-sm">
                    <div className="flex justify-between">
                      <span className={isFullRepayment ? 'text-green-700' : 'text-blue-700'}>
                        –°—É–º–º–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è:
                      </span>
                      <span className={`font-semibold ${isFullRepayment ? 'text-green-900' : 'text-blue-900'}`}>
                        {formatBTC(amountNum)}
                      </span>
                    </div>
                    <div className="flex justify-between">
                      <span className={isFullRepayment ? 'text-green-700' : 'text-blue-700'}>
                        –ù–æ–≤—ã–π –æ—Å—Ç–∞—Ç–æ–∫:
                      </span>
                      <span className={`font-semibold ${isFullRepayment ? 'text-green-900' : 'text-blue-900'}`}>
                        {formatBTC(newBalance)}
                      </span>
                    </div>
                  </div>
                  {isFullRepayment ? (
                    <p className="mt-2 text-xs text-green-700">
                      üéâ –ó–∞–π–º –±—É–¥–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–∫—Ä—ã—Ç
                    </p>
                  ) : (
                    <p className="mt-2 text-xs text-blue-700">
                      üìä –ì—Ä–∞—Ñ–∏–∫ –ø–ª–∞—Ç–µ–∂–µ–π –±—É–¥–µ—Ç –ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω —Å –Ω–æ–≤—ã–º –æ—Å—Ç–∞—Ç–∫–æ–º –¥–æ–ª–≥–∞
                    </p>
                  )}
                </div>
              </div>
            </div>
          )}

          {/* –ö–Ω–æ–ø–∫–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π —Å—É–º–º—ã */}
          <Button
            type="button"
            variant="secondary"
            fullWidth
            onClick={handleFullRepayment}
            disabled={loading}
          >
            üí∞ –ü–æ–≥–∞—Å–∏—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é ({formatBTC(remainingBalance)})
          </Button>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ */}
          <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-3">
            <p className="text-xs text-yellow-800">
              <strong>‚ÑπÔ∏è –í–∞–∂–Ω–æ:</strong> –ü–æ—Å–ª–µ –¥–æ—Å—Ä–æ—á–Ω–æ–≥–æ –ø–æ–≥–∞—à–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫ –ø–ª–∞—Ç–µ–∂–µ–π –±—É–¥–µ—Ç 
              –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω. –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—É–º–º—ã –ø–æ–≥–∞—à–µ–Ω–∏—è –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è 
              —Å—Ä–æ–∫ –∑–∞–π–º–∞ –∏–ª–∏ —Ä–∞–∑–º–µ—Ä –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–ª–∞—Ç–µ–∂–µ–π.
            </p>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div className="flex gap-4 pt-2">
            <Button
              type="button"
              variant="ghost"
              fullWidth
              onClick={onClose}
              disabled={loading}
            >
              –û—Ç–º–µ–Ω–∞
            </Button>
            <Button 
              type="submit" 
              fullWidth 
              loading={loading}
              disabled={!amountNum || amountNum <= 0}
            >
              {isFullRepayment ? '–ó–∞–∫—Ä—ã—Ç—å –∑–∞–π–º' : '–ü–æ–≥–∞—Å–∏—Ç—å —á–∞—Å—Ç–∏—á–Ω–æ'}
            </Button>
          </div>
        </form>
      </div>
    </Modal>
  );
};

