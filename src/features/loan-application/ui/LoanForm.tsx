/**
 * –§–æ—Ä–º–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ –∑–∞–π–º
 */

'use client';

import React, { useState } from 'react';
import { useRouter } from 'next/router';
import { Button, Input, Card } from '@/shared/ui';
import { APP_CONFIG } from '@/shared/config/constants';
import {
  validateLoanAmount,
  validateLoanTerm,
} from '@/shared/lib/utils/validation';
import {
  calculateMonthlyPayment,
  calculateTotalPayment,
} from '@/shared/lib/utils/calculations';
import { formatBTC } from '@/shared/lib/utils/format';
import { createLoan } from '../api/loanApi';
import { useLoanStore } from '@/entities/loan';

export const LoanForm: React.FC = () => {
  const router = useRouter();
  const addLoan = useLoanStore((state) => state.addLoan);

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã
  const [amount, setAmount] = useState<string>('');
  const [term, setTerm] = useState<string>('12');
  const [errors, setErrors] = useState<{ amount?: string; term?: string }>({});
  const [loading, setLoading] = useState(false);

  // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤ —á–∏—Å–ª–∞
  const amountNum = parseFloat(amount);
  const termNum = parseInt(term, 10);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
  const isValid =
    !isNaN(amountNum) &&
    !isNaN(termNum) &&
    validateLoanAmount(amountNum).isValid &&
    validateLoanTerm(termNum).isValid;

  // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –µ–∂–µ–º–µ—Å—è—á–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª–µ–π
  const monthlyPayment = isValid
    ? calculateMonthlyPayment(amountNum, termNum)
    : 0;
  const totalPayment = isValid ? calculateTotalPayment(amountNum, termNum) : 0;

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setErrors({});

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const amountValidation = validateLoanAmount(amountNum);
    const termValidation = validateLoanTerm(termNum);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π:
    // - –°—É–º–º–∞ > 0 –∏ <= 1 BTC
    // - –°—Ä–æ–∫ >= 1 –∏ <= 24 –º–µ—Å—è—Ü–µ–≤
    if (!amountValidation.isValid || !termValidation.isValid) {
      setErrors({
        amount: amountValidation.error,
        term: termValidation.error,
      });
      return;
    }

    setLoading(true);

    try {
      // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      const response = await createLoan({
        amount: amountNum,
        term: termNum,
      });
      
      // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–∞ –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      addLoan(response.loan);
      
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–µ—Ç–∞–ª–µ–π –∑–∞–π–º–∞
      router.push(`/loan/${response.loan.id}`);
    } catch (err: any) {
      // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –Ω–µ—É–¥–∞—á–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–π–º–∞
      setErrors({ amount: err.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–π–º–∞' });
    } finally {
      setLoading(false);
    }
  };

  return (
    <Card className="w-full max-w-2xl">
      <div className="mb-6">
        <h2 className="text-2xl font-bold text-gray-900">–ó–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–π–º</h2>
        <p className="mt-2 text-sm text-gray-600">
          –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–π–º–∞ –≤ Bitcoin
        </p>
      </div>

      <form onSubmit={handleSubmit} className="space-y-6">
        {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –∑–∞–π–º–∞ —Å —Ç–æ—á–Ω–æ—Å—Ç—å—é –¥–æ —Å–∞—Ç–æ—à–∏ (8 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π) */}
        <Input
          label="–°—É–º–º–∞ –∑–∞–π–º–∞ (BTC)"
          type="number"
          step="0.00000001"
          min={APP_CONFIG.MIN_LOAN_BTC}
          max={APP_CONFIG.MAX_LOAN_BTC}
          value={amount}
          onChange={(e) => setAmount(e.target.value)}
          placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 0.5"
          error={errors.amount}
          helperText={`–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –æ—Ç ${APP_CONFIG.MIN_LOAN_BTC} –¥–æ ${APP_CONFIG.MAX_LOAN_BTC} BTC`}
          disabled={loading}
          required
        />

        {/* –°–ª–∞–π–¥–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ä–æ–∫–∞ –∑–∞–π–º–∞ (1-24 –º–µ—Å—è—Ü–µ–≤) */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-1">
            –°—Ä–æ–∫ –∑–∞–π–º–∞: <span className="font-bold text-bitcoin-600">{term}</span> –º–µ—Å.
          </label>
          <input
            type="range"
            min={APP_CONFIG.MIN_LOAN_MONTHS}
            max={APP_CONFIG.MAX_LOAN_MONTHS}
            value={term}
            onChange={(e) => setTerm(e.target.value)}
            className="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer accent-bitcoin-500"
            disabled={loading}
          />
          <div className="flex justify-between text-xs text-gray-500 mt-1">
            <span>{APP_CONFIG.MIN_LOAN_MONTHS} –º–µ—Å.</span>
            <span>{APP_CONFIG.MAX_LOAN_MONTHS} –º–µ—Å.</span>
          </div>
          {errors.term && (
            <p className="mt-1 text-sm text-red-600">{errors.term}</p>
          )}
        </div>

        {/* –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–π–º–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª–µ–π */}
        {isValid && (
          <div className="bg-gradient-to-br from-bitcoin-50 to-orange-50 p-5 rounded-lg border border-bitcoin-200 space-y-3">
            <div className="flex items-center gap-2">
              <svg
                className="w-5 h-5 text-bitcoin-600"
                fill="none"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path d="M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z" />
              </svg>
              <h3 className="font-bold text-gray-900">–†–∞—Å—á–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–π–º–∞</h3>
            </div>
            <div className="grid grid-cols-2 gap-4 text-sm">
              <div className="bg-white p-3 rounded-lg">
                <p className="text-gray-600 text-xs mb-1">–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂:</p>
                <p className="font-bold text-lg text-bitcoin-600">
                  {formatBTC(monthlyPayment)}
                </p>
              </div>
              <div className="bg-white p-3 rounded-lg">
                <p className="text-gray-600 text-xs mb-1">–û–±—â–∞—è —Å—É–º–º–∞ –≤—ã–ø–ª–∞—Ç:</p>
                <p className="font-bold text-lg text-gray-900">
                  {formatBTC(totalPayment)}
                </p>
              </div>
              <div className="bg-white p-3 rounded-lg">
                <p className="text-gray-600 text-xs mb-1">–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞:</p>
                <p className="font-bold text-gray-900">
                  {(APP_CONFIG.INTEREST_RATE * 100).toFixed(1)}% –≥–æ–¥–æ–≤—ã—Ö
                </p>
              </div>
              <div className="bg-white p-3 rounded-lg">
                <p className="text-gray-600 text-xs mb-1">–ü–µ—Ä–µ–ø–ª–∞—Ç–∞:</p>
                <p className="font-bold text-gray-900">
                  {formatBTC(totalPayment - amountNum)}
                </p>
              </div>
            </div>
            <p className="text-xs text-gray-600 mt-2">
              üí° –†–∞—Å—á–µ—Ç –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—É–º–º—ã –∏–ª–∏ —Å—Ä–æ–∫–∞
            </p>
          </div>
        )}

        <div className="flex gap-4">
          <Button
            type="button"
            variant="secondary"
            fullWidth
            onClick={() => router.back()}
            disabled={loading}
          >
            –ù–∞–∑–∞–¥
          </Button>
          <Button type="submit" fullWidth loading={loading} disabled={!isValid}>
            –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–π–º
          </Button>
        </div>
      </form>
    </Card>
  );
};

